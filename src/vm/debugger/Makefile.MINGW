##############
# For OSX only
##############
# ARGS=-pthread -mstackrealign -O3
# ARGS=-pthread -D_TIMING -mstackrealign -O3
# ARGS=-pthread -mstackrealign -g -D_DEBUG -Wunused
# ARGS=-g -mstackrealign -Wunused -D_DEBUG -pthread -D_DEBUGGER
ARGS=-O3 -D_MINGW -D_DEBUGGER -Wall

##############
# For Linux
##############
# ARGS=-g -Wunused -pthread
# ARGS=-g -D_DEBUG -D_DEBUGGER -Wunused -pthread
# ARGS=-g -D_DEBUG -Wunused -pthread
# ARGS=-g -Wunused -D_JIT_SERIAL -pthread
# ARGS=-O3 -pthread

CC=g++
SRC=tree.o scanner.o parser.o debugger.o
OBJ_LIBS=compiler.a ../jit_intel_lp32.a ../memory.a
COMPILER_PATH=..
MEM_PATH=../os/posix
JIT_PATH=../jit/ia32
EXE=obd
RES=debugger/objeck.res

$(EXE): $(SRC) $(OBJ_LIBS) $(RES)
	$(CC) -m32 -static -static-libstdc++ -o $(EXE) $(SRC) $(OBJ_LIBS) $(RES) -lws2_32

compiler.a:
	cd $(COMPILER_PATH); make	

../memory.a:
	cd $(MEM_PATH); make

../jit_intel_lp32.a:
	cd $(JIT_PATH); make

$(RES):
	windres debugger/objeck.rc -O coff -o $(RES)
	
%.o: %.cpp
	$(CC) -m32 -static -static-libstdc++ $(ARGS) -c $< 

clean:
	cd $(COMPILER_PATH); make clean
	rm -f $(EXE).exe $(RES) $(EXE) *.exe *.o *~
