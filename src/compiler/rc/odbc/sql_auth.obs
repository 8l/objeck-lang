use ODBC;
use Encryption;

class SqlTest {
	@conn : Connection;
	
	function : Main(args : String[]) ~ Nil {
		SqlTest->New()->Run();
	}

	New() {	
		@conn := Connection->New("test", "root", "helloworld");
	}
	
	method : Run() ~ Nil {
		CreateUser("objeck", "beer");
		AuthenticateUser("objeck", "beer")->PrintLine();
		@conn->Close();
	}

	method : AuthenticateUser(username : String, password : String) ~ Bool {
		status := false;
		if(@conn->IsOpen()) {
			sql := "SELECT pass_salt, pass_md5 FROM test.users WHERE username = ?";
			ps := @conn->CreateParameterStatement(sql);
			ps->SetVarchar(1, username);
			
			result := ps->Select();
			if(result <> Nil & result->Next()) {
				salt_buffer := Byte->New[16];
				result->GetBlob(1, salt_buffer);
				salt := "";
				for(i := 0; i < 16; i+=1;) {
					salt->Append(salt_buffer[i]);
				};

				password_buffer := Byte->New[16];
				result->GetBlob(2, password_buffer);

				password->Append(salt);
				md5_user_password := Hash->MD5(password->ToByteArray());
		
for(i := 0; i < 16; i+=1;) {
	x := md5_user_password[i];
	x->As(Int)->PrintLine();
	y := password_buffer[i];
	y->As(Int)->PrintLine();
	"---"->PrintLine();
};
			};
			ps->Close();
		};
		
		return status;
	}
	
	method : CreateUser(username : String, password : String) ~ Nil {
		salt := "";
		for(i := 0; i < 16; i+=1;) { salt->Append((Float->Random() * 100)->As(Int)); };
		salt := salt->SubString(16);
		
		password->Append(salt);
		md5_password := Hash->MD5(password->ToByteArray());

		if(@conn->IsOpen()) {
			sql := "INSERT INTO test.users(username, pass_salt, pass_md5) VALUES (?, ?, ?)";			
			ps := @conn->CreateParameterStatement(sql);
			ps->SetVarchar(1, username);
			ps->SetBlob(2, salt->ToByteArray());

#~
in := md5_password;
out := Byte->New[16];
for(i := 0; i < 16; i+=1;) {
	if(i < in->Size()) {
		out[i] := in[i];
	}
	else {
		out[i] := 0;
	};
};
~#
			ps->SetBlob(3, md5_password);
			
			IO.Console->Print("adding user: username=")->Print(username)
				->Print(", salt=")->Print(salt)
				->Print(", status=")->PrintLine(ps->Update());
			ps->Close();
		};
	}
}
