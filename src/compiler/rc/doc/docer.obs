class DocMaker {
	function : Main(args : String[]) ~ Nil {
		if(args->Size() = 1) {
			parser := DocParser->New(args[0]);
			classes := parser->Parse();
			if(classes <> Nil) {
				classes->Size()->PrintLine();
				"---"->PrintLine();
				each(i : classes) {
					class_block := classes->Get(i)->As(ClassBlock);
					if(class_block <> Nil) {
						class_name := class_block->GetName();
						class_desc := class_block->GetDesc();
						IO.Console->Print("class [")->Print(i + 1)->Print("]: name='")
							->Print(class_name <> Nil ? class_name : "(none)")->Print("', desc='")
							->Print(class_desc <> Nil ? class_desc : "(none)")->PrintLine("'");
						funcs := class_block->GetFunctions();
						each(j : funcs) {
							func := funcs->Get(j)->As(FuncBlock);
							if(func <> Nil) {
								IO.Console->Print("  func: name='")->Print(func->GetName())->Print("', desc='")
									->Print(func->GetDesc());
								if(func->GetReturn() <> Nil) {
									IO.Console->Print("', return='")->Print(func->GetReturn()->GetDesc())->Print("'");
								}
								else {
									("'")->Print();
								};
								IO.Console->Print(", signature='")->Print(func->GetSignature())->PrintLine("'");

								param_tags := func->GetParamTags();
								params := func->GetParams();
								each(k : params) {
									param := params->Get(k)->As(DocType);
									if(param <> Nil) {
										param_tag := param_tags->Find(param->GetName())->As(DocTag);
										if(param_tag <> Nil) {
											IO.Console->Print("    param (")->Print(k + 1)->Print("): name='")
												->Print(param_tag->GetName())->Print("', type='")->Print(param->GetTypeName())
												->Print("', desc='")->Print(param_tag->GetDesc())->PrintLine("'");
										};
									};
								};
							};	
						};
					};
				};				
			};
		};
	}
}
