use Gtk2;

bundle Default {
	class MyButton from GtkButton {
		New(title : String) {
			Parent(title);
		}

		method : public : Clicked() ~ Nil {
			"clicked..."->PrintLine();
		}
	}

	class HelloGtk {
		function : TestHandle(widget : GtkWidget, param : Base) ~ Nil {
			"Hello Gtk2"->PrintLine();
			Appliction->MainQuit();
		}

		function : ButtonHandle(widget : GtkWidget, param : Base) ~ Nil {
			widget->GetClass()->GetName()->PrintLine();
			param->GetClass()->GetName()->PrintLine();
		}

		function : Main(args : String[]) ~ Nil {
			# callbacks
			delete_callback := Events->DeleteEvent(GtkWidget) ~ Nil;
			test_callback := TestHandle(GtkWidget, Base) ~ Nil;
			button_callback := ButtonHandle(GtkWidget, Base) ~ Nil;
	
			# create 
			button := MyButton->New("button 1");
			button2 := MyButton->New("button 2");

			hbox := GtkHBox->New(false, 0);
			hbox->PackStart(button->As(GtkWidget), true, true, 0);
			hbox->PackStart(button2->As(GtkWidget), true, true, 0);

			window := GtkWindow->New();
			window->SignalConnect("delete-event", test_callback, window);
			window->SetBorderWidth(35);
			window->SetTitle("Goodbye, World!");

button->GetClass()->GetName()->PrintLine();

			id := button->SignalConnect("clicked", button_callback, button);
			button->SignalHandlerDisconnect(id);

button->GetLabel()->PrintLine();

			window->Add(hbox->As(GtkWidget));

			
			# WidgetShow
			button->WidgetShow();
			button2->WidgetShow();
			hbox->WidgetShow();			
			window->WidgetShow();
			Appliction->Main();
		}
	}
}
