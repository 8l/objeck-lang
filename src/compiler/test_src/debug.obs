bundle Default {
	interface Fee {
		method : virtual : public : Who() ~ Nil;
	}
	
	class Test {
		@called : (String) ~ Nil;

		New(called : (String)~ Nil) {
			@called := called;
		}

		method : public : Foo() ~ Nil {
			"fee, fie, foo, fum"->PrintLine();
			@called("do that!");
		}
	}

	class Fie implements Fee {
		New() {}
		method : public : Who() ~ Nil {
			"Fie"->PrintLine();
		}

		method : public : Call(called : (String)~Nil) ~ Nil {
			t := Test->New(called);
			t->Foo();
		}
	}

	class Foo from Fie implements Fee {
		New() { 
			Parent(); 
		}

		method : public : Who() ~ Nil {
			"Foo"->PrintLine();
		}
	}

	class Fum {
		New() {}
		function : Main(args : String[]) ~ Nil {
#~
			f : Fee := Foo->New();
			f->Who();
			f->Who();
~#

			ff := Foo->New();
			ff->Call(Fum->Callee(String) ~ Nil);

#			i := 5;
#			5->Times(PrintHello() ~ Nil);

			i := 15;
			10->Max(i)->PrintLine();
		}

		function : public : PrintHello() ~ Nil {
			"hello"->PrintLine();
		}

		function : public : Callee(value : String) ~ Nil {
			value->PrintLine();
		}

		method : public : Who() ~ Nil {
			"Foo"->PrintLine();
		}
	}
}
