use IO;
use Struct;

bundle Default {
	class PageParser  {
		@index : Int;
		@page : String;
		@page_chars : Char[];
		@cur_char : Char;
		@nxt_char : Char;
		@nxt_nxt_char : Char;
		@html : String;
		@tag_stack : Stack;

		New(page : String) {
			if(page <> Nil) {
				@page := page;
				@page_chars := page->ToCharArray();
				@index := -1;
				@html := String->New();
				@tag_stack := Stack->New();
				NextChar();
			};
		}

		method : NextChar() ~ Nil {
			@index += 1;

			if(@index < @page_chars->Size()) {
				@cur_char := @page_chars[@index];
				if(@index + 1 < @page_chars->Size()) {
					@nxt_char := @page_chars[@index + 1];
					if(@index + 2 < @page_chars->Size()) {
						@nxt_nxt_char := @page_chars[@index + 2];
					}
					else {	
						@nxt_nxt_char := '\0';
					};
				}
				else {	
					@nxt_char := '\0';
				};
			}
			else {
				@cur_char := '\0';
			};
		}

		method : public : Parse() ~ Nil {
			if(@page_chars = Nil) {
				return;
			};

			tag_start := false;
			while(@cur_char <> '\0') {
				# open tag
				if(@cur_char = '<' & @nxt_char = '/' & @nxt_nxt_char = '#') {
					NextChar();	NextChar();	NextChar();	
					s := @index;
					while(@cur_char <> '>') {
						NextChar();	
					};
					e := @index;
Console->Print("ending tag: '")->Print(@page->SubString(s, e -s))->PrintLine("'");
					NextChar();	
					tag_start := false;
				}
				else if(@cur_char = '<' & @nxt_char = '#') {
					NextChar();	NextChar();	
					s := @index;
					while(@cur_char <> ' ' & @cur_char <> '>') {
						NextChar();	
					};
					e := @index;
					tag_start := true;
Console->Print("starting tag: '")->Print(@page->SubString(s, e -s))->PrintLine("'");
				}
				else if(tag_start & @cur_char = '/' & @nxt_char = '>') {
					NextChar();	NextChar();	
					tag_start := false;
"ending unary tag "->PrintLine();
				}
				# proceede
				else {
					if(tag_start <> true) {
						@html->Append(@cur_char);
					};
					NextChar();	
				};
			};
			@cur_char->Print('\n');
			@html->PrintLine();
		}

		function : Main(args : String[]) ~ Nil {
			if(args->Size() = 1) {
				parser := PageParser->New(FileReader->ReadFile(args[0]));
				parser->Parse();
			};
		}	
	}
}
