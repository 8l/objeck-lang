class Foo {
	@z : Int;
	New() { "Hello"->PrintLine(); }
	method : virtual : public : Go(a : Int) ~ Float;

	method : public : Go2(a : Int) ~ Nil {
		@z := 101;	
	}
}

class Test {

	function : Main(args : String[]) ~ Nil {
s :=				String->New() {
	#				New() { Parent(); }

					method : public : Bar() ~ Nil {
						"barred"->PrintLine();
					}
				};
		s->Bar();
		s->Append("GGG");
		s->PrintLine();
		s->GetClass()->GetName()->PrintLine();

		e := 2;
		c := Foo->New(10) {
			@m : Int;
			@e : Int;
			# TODO: make an explicit call...
			New(e : Int) { Parent(); @e := e; @m := 31; }

			method : public : Go(a : Int) ~ Float {
				Go2(4);
			
						
					

				return @z + @e * 3.145;
#				return 3.145;
			}
		};

		d := Foo->New() {
			New() { Parent(); }
			method : public : Go(a : Int) ~ Float {
				return a * 67.95;
			}
		};

		c->Go(13)->PrintLine();
		c->GetClass()->GetName()->PrintLine();

		d->Go(13)->PrintLine();
		d->GetClass()->GetName()->PrintLine();
	}
}
