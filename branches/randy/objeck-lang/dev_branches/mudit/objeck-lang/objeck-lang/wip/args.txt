LOAD_INT_LIT: value=3 		<== argc
NEW_INT_ARY: dimension=1
--
STOR_INT_VAR: id=0, local=true

##############################

LOAD_INT_LIT: value=4 		<== @(argv[0].size())
NEW_BYTE_ARY: dimension=1
LOAD_INT_LIT: value=0 		<== static ID
LOAD_INT_LIT: value=-3998 	<== @(string copy)
TRAP_RTRN: args=3 			<== trap
--
NEW_OBJ_INST: class=8
MTHD_CALL: class=8, method=2; native=0		<== string constructor
--
LOAD_INT_LIT: value=0
LOAD_INT_VAR: id=0, local=true
STOR_INT_ARY_ELM: dimension=1, local=true	<== @(store string at index)

##############################

LOAD_INT_LIT: value=5 		<== argv[1].size()
NEW_BYTE_ARY: dimension=1
LOAD_INT_LIT: value=1		<==
LOAD_INT_LIT: value=-3998	<== string copy
TRAP_RTRN: args=3  		<==
--
NEW_OBJ_INST: class=8
MTHD_CALL: class=8, method=2; native=0
--
LOAD_INT_LIT: value=1
LOAD_INT_VAR: id=0, local=true
STOR_INT_ARY_ELM: dimension=1, local=true

##############################

LOAD_INT_LIT: value=6  		<== argv[2].size()
NEW_BYTE_ARY: dimension=1
LOAD_INT_LIT: value=2  		<==
LOAD_INT_LIT: value=-3998 	<== string copy
TRAP_RTRN: args=3  		<==
--
NEW_OBJ_INST: class=8
MTHD_CALL: class=8, method=2; native=0
--
LOAD_INT_LIT: value=2
LOAD_INT_VAR: id=0, local=true
STOR_INT_ARY_ELM: dimension=1, local=true

##############################

LOAD_INT_VAR: id=0, local=true
LOAD_INST_MEM
MTHD_CALL: class=10, method=1; native=0
--
RTRN
--

