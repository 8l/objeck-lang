About Objeck
============

Please refer to the project website (http://www.objeck.org) for additional information 
about the language. The Programmer’s Guide is located the “doc” directory.  Additional 
examples are available on the Rosetta Code website 
(http://rosettacode.org/wiki/Category:Objeck).  Please submit bugs to (objeck@gmail.com), 
bug reports are greatly appreciated!!

Package directories:
bin/ – compiler, debugger and VM executables (along with supporting shared libraries) 
doc/ – documentation
doc/syntax – files to enable syntax highlighting for supported editors
examples/ - source code examples

Compiling and executing Objeck programs:
In order to compile programs outside of the “bin” directory the “OBJECK_LIB_PATH” 
environment variable must be set.  When this variable is set all library files must 
be in the directory specified.  

If the Windows installer was used these variables will be automatically after the 
system has been restarted.  Manually setting the environment paths in Windows:
1.	set OBJECK_LIB_PATH=C:\Documents and Settings\Administrator\objeck-lang\bin
2.	set PATH=%PATH%;C:\Documents and Settings\Administrator\ objeck-lang\bin

Simple compile/execute:
1.	obc -src ..\examples\hello.obs -dest hello.obe 
		–OR- 
1.	obc -src "C:\Program Files\Objeck\objeck-lang\examples\encrypt.obs" 
	-lib encrypt.obl -dest hello.obe
2.	obr hello.obe

Compile/execute for code that has library dependencies:
1.	obc -src ..\examples\xml_path.obs -lib collect.obl,xml.obl -dest xml_path.obe
2.	obr xml.obe 

For OS X (10.9 or greater), you’ll need to install OpenSSL in order to use encryption 
APIs as well as iODBC to enable database support. Please refer to the following link 
for OpenSSL directions and this link for about ODBC support. 
The Objeck source repository is located here and the source can be fetch using the 
following command:
* git clone https://github.com/objeck/objeck-lang.git

Known bugs and limitations:
* On Windows, the ODBC driver must be a 32-bit driver for compatibility. 
* Fedora Linux distributions may report errors about heap buffer execution. This is 
triggered by the JIT compiler’s execution of generated machine code. To resolve this 
issue please consult the Fedora error console.
* The XML parser class does not support DTDs or DOCTYPE tags
* By design, the regular expression class performs greedy pattern matching.
* All unit tests executed successfully but I'm sure there are some bugs. Send an 
e-mail we’ll get them sorted.